generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bookshelf {
  BOOKSHELF_ID    Int    @id @default(autoincrement())
  NAME  String
  BookshelfBooks BookshelfBooks[] @relation
}

model BookshelfBooks {
  BOOKSHELF_BOOKS_ID Int @id @default(autoincrement())
  BOOKSHELF_ID Int
  bookshelf    Bookshelf     @relation(fields: [BOOKSHELF_ID], references: [BOOKSHELF_ID])
  BOOK_ID Int
  books    Books     @relation(fields: [BOOK_ID], references: [BOOK_ID])
  STOCK Int
}

model Books {
  BOOK_ID    Int    @id @default(autoincrement())
  TITLE  String
  AUTHOR  String
  RELEASE_YEAR  Int
  STOCK Int
  Transaction_Books Transaction_Books[] @relation
  History History[] @relation
  BookshelfBooks BookshelfBooks[] @relation
}

model Students {
  STUDENT_ID    Int    @id @default(autoincrement())
  NIM  String
  STUDENT_NAME  String
  IS_ACTIVE  Boolean
  Transaction Transaction[] @relation
  Transaction_Books Transaction_Books[] @relation
}

model Transaction {
  TRANSACTION_ID    Int    @id @default(autoincrement())
  student    Students     @relation(fields: [STUDENT_ID], references: [STUDENT_ID])
  STUDENT_ID  Int
  TRANSACTION_DATE DateTime
  Transaction_Books Transaction_Books[] @relation
}

model Transaction_Books {
  TRANSACTION_BOOKS_ID    Int    @id @default(autoincrement())
  transaction    Transaction     @relation(fields: [TRANSACTION_ID], references: [TRANSACTION_ID], onUpdate: NoAction)
  TRANSACTION_ID  Int
  student    Students     @relation(fields: [STUDENT_ID], references: [STUDENT_ID], onUpdate: NoAction)
  STUDENT_ID  Int
  book    Books     @relation(fields: [BOOK_ID], references: [BOOK_ID], onUpdate: NoAction)
  BOOK_ID  Int
  START_DATE DateTime
  RETURN_DATE DateTime
}

model History {
  HISTORY_ID    Int    @id @default(autoincrement())
  NIM  String
  STUDENT_NAME  String
  book    Books     @relation(fields: [BOOK_ID], references: [BOOK_ID],onUpdate: NoAction)
  BOOK_ID  Int
  TITLE  String
  START_DATE DateTime
  RETURN_DATE DateTime
  BORROWING_TIME String
}


